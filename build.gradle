buildscript {
    repositories {
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = mod_version
group = mod_group_id
apply plugin: 'java'
apply plugin: 'org.spongepowered.mixin'

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(Javadoc).configureEach {
    options.tags = [
            'reason:a:Reason:'
    ]
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.debug.export', 'true'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }


        client {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', mod_id
            arg '-mixin.config=' + mod_id + '.mixins.json'
            args '--username', project.findProperty('minecraftUsername') ?: 'Dev'
        }

        server {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', mod_id
            arg '-mixin.config=' + mod_id + '.mixins.json'
        }

        gameTestServer {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
    ext.refMap = "main.refmap.json"
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}

repositories {
    // Main repositories
    maven {
        name = "Illusive Soulworks maven"
        url = "https://maven.theillusivec4.top/"
    }

    maven { url = "https://maven.firstdarkdev.xyz/snapshots" } // LDLib, Photon

    maven {
        url "https://cursemaven.com"
    }

    maven { url 'https://maven.minecraftforge.net/' }
    maven { url 'https://maven.parchmentmc.org' }
//    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url 'https://repo.azisaba.net/repository/maven-public/' }
    // Modrinth for Better Combat
    maven { url 'https://api.modrinth.com/maven' }

    // Cloth Config
    maven { url 'https://maven.shedaniel.me/' }

    // playerAnimator
    maven { url 'https://maven.kosmx.dev/' }

    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }


}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // Mixin
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.5.0"))

    compileOnly("io.github.llamalad7:mixinextras-common:0.4.1")
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.5.0")) {
        jarJar.ranged(it, "[0.5.0,)")
    }
    // GeckoLib
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${minecraft_version}:${geckolib_version}")
    implementation("com.eliotlash.mclib:mclib:20")
    implementation(fg.deobf("me.shedaniel.cloth:cloth-config-forge:11.1.136"))
    implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:${player_anim_version}")
    implementation fg.deobf('maven.modrinth:better-combat:1.8.6+1.20.1-forge')
    implementation fg.deobf("curse.maven:crafttweaker-239197:6256146")


    implementation fg.deobf("curse.maven:mmmmmmmmmmmm-225738:6237015")
    implementation fg.deobf("curse.maven:selene-499980:6507197")
//    implementation fg.deobf("curse.maven:cofh-core-69162:5374122")

    // Clientside (Disable when running Server)
//    implementation fg.deobf("curse.maven:embeddium-908741:5681725")
    implementation fg.deobf("curse.maven:jade-324717:6271651")
//    implementation fg.deobf("curse.maven:oculus-581495:6020952")
//    implementation fg.deobf("curse.maven:free-cam-557076:4643128")
//    implementation fg.deobf("curse.maven:model-gap-fix-676136:5200949")
//    implementation fg.deobf("curse.maven:loot-beams-506757:5548970")
//    implementation fg.deobf("curse.maven:overflowing-bars-852662:5763974")

    implementation fg.deobf("curse.maven:attributefix-280510:4911084")
    implementation fg.deobf("curse.maven:bookshelf-228525:5423987")
    implementation fg.deobf("curse.maven:effortless-building-302113:6330928")

    implementation fg.deobf("curse.maven:puzzles-lib-495476:6387081")


    implementation fg.deobf("curse.maven:configured-457570:5180900")
//    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:5057220")
//    implementation fg.deobf("curse.maven:just-enough-effect-descriptions-jeed-532286:6172935")

    implementation fg.deobf("curse.maven:lendercataclysm-551586:6906993")
    implementation fg.deobf("curse.maven:lionfish-api-1001614:5922047")

    // Terramity thingamajigs
    implementation fg.deobf("curse.maven:environmental-388992:6060255")
    implementation fg.deobf("curse.maven:blueprint-382216:6408581")

    implementation fg.deobf("curse.maven:terramity-1084134:6054971")
    implementation fg.deobf("curse.maven:patchouli-306770:6164575")
    implementation fg.deobf("curse.maven:curios-309927:6418456")
    implementation fg.deobf("curse.maven:caelus-308989:5281700")
    implementation fg.deobf("curse.maven:lethality-a-terramity-addon-1282036:6766042")
    implementation fg.deobf("curse.maven:azurelib-817423:6849107")

    // compile against the JEI API but do not include it at runtime
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"))
    // at runtime, use the full JEI jar for Forge
    runtimeOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}"))

    // Compile against only the API artifact
    compileOnly "top.theillusivec4.curios:curios-forge:${curios_version}:api"
    // Use the full Curios API jar at runtime
    runtimeOnly "top.theillusivec4.curios:curios-forge:${curios_version}"

    implementation fg.deobf("com.lowdragmc.photon:photon-forge-1.20.1:${photon_version}") { transitive = false }
    implementation fg.deobf("com.lowdragmc.ldlib:ldlib-forge-1.20.1:${ld_lib_version}") { transitive = false }
    implementation fg.deobf("com.lowdragmc.photon:photon-common-1.20.1:${photon_version}") { transitive = false }
    implementation fg.deobf("com.lowdragmc.ldlib:ldlib-common-1.20.1:${ld_lib_version}") { transitive = false }
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            forge_version          : forge_version,
            forge_version_range    : forge_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description,
    ]

    inputs.properties replaceProperties
    duplicatesStrategy = DuplicatesStrategy.WARN

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }

    exclude '.cache'
}


publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven { url 'https://maven.minecraftforge.net' }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}
